// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: newsfeed.proto

package newsfeed

import (
	authpost "github.com/hoangNguyenDev3/WanderSphere/backend/pkg/types/proto/pb/authpost"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetNewsfeedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsfeedRequest) Reset() {
	*x = GetNewsfeedRequest{}
	mi := &file_newsfeed_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsfeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsfeedRequest) ProtoMessage() {}

func (x *GetNewsfeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_newsfeed_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsfeedRequest.ProtoReflect.Descriptor instead.
func (*GetNewsfeedRequest) Descriptor() ([]byte, []int) {
	return file_newsfeed_proto_rawDescGZIP(), []int{0}
}

func (x *GetNewsfeedRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetNewsfeedResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Posts         []*authpost.PostDetailInfo `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsfeedResponse) Reset() {
	*x = GetNewsfeedResponse{}
	mi := &file_newsfeed_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsfeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsfeedResponse) ProtoMessage() {}

func (x *GetNewsfeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_newsfeed_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsfeedResponse.ProtoReflect.Descriptor instead.
func (*GetNewsfeedResponse) Descriptor() ([]byte, []int) {
	return file_newsfeed_proto_rawDescGZIP(), []int{1}
}

func (x *GetNewsfeedResponse) GetPosts() []*authpost.PostDetailInfo {
	if x != nil {
		return x.Posts
	}
	return nil
}

var File_newsfeed_proto protoreflect.FileDescriptor

const file_newsfeed_proto_rawDesc = "" +
	"\n" +
	"\x0enewsfeed.proto\x12\bnewsfeed\x1a\x0eauthpost.proto\"-\n" +
	"\x12GetNewsfeedRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"E\n" +
	"\x13GetNewsfeedResponse\x12.\n" +
	"\x05posts\x18\x01 \x03(\v2\x18.authpost.PostDetailInfoR\x05posts2X\n" +
	"\bNewsfeed\x12L\n" +
	"\vGetNewsfeed\x12\x1c.newsfeed.GetNewsfeedRequest\x1a\x1d.newsfeed.GetNewsfeedResponse\"\x00BMZKgithub.com/hoangNguyenDev3/WanderSphere/backend/pkg/types/proto/pb/newsfeedb\x06proto3"

var (
	file_newsfeed_proto_rawDescOnce sync.Once
	file_newsfeed_proto_rawDescData []byte
)

func file_newsfeed_proto_rawDescGZIP() []byte {
	file_newsfeed_proto_rawDescOnce.Do(func() {
		file_newsfeed_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_newsfeed_proto_rawDesc), len(file_newsfeed_proto_rawDesc)))
	})
	return file_newsfeed_proto_rawDescData
}

var file_newsfeed_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_newsfeed_proto_goTypes = []any{
	(*GetNewsfeedRequest)(nil),      // 0: newsfeed.GetNewsfeedRequest
	(*GetNewsfeedResponse)(nil),     // 1: newsfeed.GetNewsfeedResponse
	(*authpost.PostDetailInfo)(nil), // 2: authpost.PostDetailInfo
}
var file_newsfeed_proto_depIdxs = []int32{
	2, // 0: newsfeed.GetNewsfeedResponse.posts:type_name -> authpost.PostDetailInfo
	0, // 1: newsfeed.Newsfeed.GetNewsfeed:input_type -> newsfeed.GetNewsfeedRequest
	1, // 2: newsfeed.Newsfeed.GetNewsfeed:output_type -> newsfeed.GetNewsfeedResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_newsfeed_proto_init() }
func file_newsfeed_proto_init() {
	if File_newsfeed_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_newsfeed_proto_rawDesc), len(file_newsfeed_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_newsfeed_proto_goTypes,
		DependencyIndexes: file_newsfeed_proto_depIdxs,
		MessageInfos:      file_newsfeed_proto_msgTypes,
	}.Build()
	File_newsfeed_proto = out.File
	file_newsfeed_proto_goTypes = nil
	file_newsfeed_proto_depIdxs = nil
}
